version: '3'

services:

  postgres:
    container_name: postgres
    image: postgres:14.1-alpine
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USERNAME: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_volume:/var/lib/postgresql/data\

  redis:
    image: redis:7-alpine
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: kafka
    image: bitnami/kafka:3.0.0
    environment:
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
    ports:
      - "9092:9092"
      - "9093:9093"
    depends_on:
      - zookeeper
    networks:
     - my_network

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8079:8079"
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    restart: always
    depends_on:
      - kafkado
    networks:
      - my_network
networks:
  my_network:
    driver: bridge

volumes:
  postgres_volume:
  redis_data: